# 端口配置
server:
  port: 8080
  servlet:
    context-path: /

# 数据源配置
spring:
  application:
    name: freedom

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/freedom?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: kmj123456
    jackson:
      date-format: yyyy-MM-dd HH:mm:ss
      time-zone: GMT+8

  # 如果使用端口为465，将protocol的smtp改为smtps
  #将配置文件端口改为587，则可以使用smtp。
  #均为SSL连接端口，因为qq不支持非SSL端口。
  #以下是配置文件，重点在于protocal（视端口而定）和开启SSL（必须）
  mail:
    # 字符集编码 默认 UTF-8
    default-encoding: UTF-8
    # SMTP 服务器 host  qq邮箱的为 smtp.qq.com 端口 465 587
    host: smtp.exmail.qq.com
    # SMTP 服务器端口 不同的服务商不一样
    port: 465
    # SMTP 服务器使用的协议
    protocol: smtps
    # 发送端的用户邮箱名
    username: kanmeijie@17zhiliao.com
    # 发送端的密码
    password: Kmj08171658
    # 设置开启ssl
    properties:
      mail:
        stmp:
          ssl:
            enable: true

# Mybatis-Plus配置
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/roger/*/mapper/*Mapper.xml # 如果是放在resource目录 classpath:/mapper/*Mapper.xml mapper-locations: classpath*:com/roger/**/**.xml,classpath*:mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.roger.**.entity,com.roger.**.dto
  global-config:
    #刷新mapper 调试神器
    db-config:
      #主键类型 0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: UUID
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
      #逻辑删除配置
      logic-delete-value: 1 # 逻辑已删除值(默认为 1) logic-not-delete-value: 0 # 逻辑未删除值(默认为 0) #驼峰下划线转换
      column-underline: false
    #数据库大写下划线转换
    #      capital-mode: true
    refresh: true
    configuration:
      # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
      map-underscore-to-camel-case: true
      # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
      call-setters-on-nulls: true
      cache-enabled: false
      #配置JdbcTypeForNull, oracle数据库必须配置
      jdbc-type-for-null: 'null'
      # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
      database-id: mysql